Imports System.Web.SessionState


Public Class Global_asax
    Inherits System.Web.HttpApplication

    Sub Application_Start(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when the application is started
    End Sub

    Sub Session_Start(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when the session is started

        Session(SessionKey.CULTURE) = Constant.CULTURE_AR_KW
        Session(SessionKey.CULTURE_ISO) = Constant.CULTURE_AR

    End Sub

    Sub Application_BeginRequest(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires at the beginning of each request
    End Sub

    Sub Application_AuthenticateRequest(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires upon attempting to authenticate the use
    End Sub

    Sub Application_Error(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when an error occurs

        ' Code that runs when an unhandled error occurs

        ' Get the exception object.
        Dim exc As Exception = Server.GetLastError

        If exc Is Nothing Then

            Exit Sub

        End If

        ' Handle HTTP errors (avoid trapping HttpUnhandledException
        ' which is generated when a non-HTTP exception 
        ' such as the ones generated by buttons 1-3 in 
        ' Default.aspx is not handled at the page level).
        If (exc.GetType Is GetType(HttpException)) Then
            ' The Complete Error Handling Example generates
            ' some errors using URLs with "NoCatch" in them;
            ' ignore these here to simulate what would happen
            ' if a global.asax handler were not implemented.
            If exc.Message.Contains("NoCatch") Or exc.Message.Contains("maxUrlLength") Then
                Return
            End If

            'Redirect HTTP errors to HttpError page
            Server.Transfer("UIMasterFreeGenericError.aspx")
        End If

        If Not exc.InnerException Is Nothing Then

            exc = New Exception(exc.InnerException.Message)

        End If

        If exc.Message.Contains("permission was denied on the object") Then

            'Response.Write("<h1>عذرا لقد حدث خطأ</h1>" & vbLf)
            Response.Write(String.Format("<h1>{0}</h1>{1}", String.Format("عذرا لقد حدث {0}", "<a title='" & exc.Message & "'>" & "خطأ</a>"), vbLf))
            Response.Write("<h2>" & "لا توجد لديك صلاحيات" + "</h2>" & vbLf)
            Response.Write(("<h3>" & "العوده الى <a href='Default.aspx'>" & "الصفحه الرئيسيه</a>" + "</h3>" & vbLf))
            Response.Write(("<h3>" & "<a href='JavaScript:window.close()'>اغلاق</a>" + "</h3>" & vbLf))

        Else

            ' For other kinds of errors give the user some information
            ' but stay on the default page
            'Response.Write("<h2>عذرا لقد حدث خطأ</h2>" & vbLf)
            Response.Write(String.Format("<h1>{0}</h1>{1}", String.Format("عذرا لقد حدث {0}", "<a title='" & exc.Message & "'>" & "خطأ</a>"), vbLf))
            Response.Write("<p>" & exc.Message + "</p>" & vbLf)
            Response.Write(("<h3>" & "العوده الى <a href='Default.aspx'>" & "الصفحه الرئيسيه</a>" + "</h3>" & vbLf))

        End If

        ' Log the exception and notify system operators
        ExceptionUtility.LogException(exc, "DefaultPage")
        ExceptionUtility.NotifySystemOps(exc)

        ' Clear the error from the server
        Server.ClearError()

    End Sub

    Sub Session_End(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when the session ends
    End Sub

    Sub Application_End(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when the application ends
    End Sub

End Class